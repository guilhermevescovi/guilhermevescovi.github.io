@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
html, body {
  padding: 0;
  margin: 0;
  font-family: 'Montserrat', sans-serif;
  height: 100%;
  width: 100%; }

h1 {
  margin: 0;
  padding: 0; }

body {
  overflow: hidden; }

.full-screen-div {
  width: 100vw;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: hidden; }

#wrapper {
  height: 92.3354vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100vw;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;
  background: #000000;
  /* fallback for old browsers */
  background: -webkit-linear-gradient(to right, #434343, #000000);
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #434343, #000000);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */ }

.sub {
  color: #64dcdc;
  letter-spacing: 1em; }

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 3rem;
  letter-spacing: .5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 2s infinite linear alternate-reverse; }
  .glitch::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
    a typical top,right,bottom,left fashion and creates a mask
    to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
    with an alternating animation to keep things fresh. */
    animation: glitch-anim 3s infinite linear alternate-reverse; }
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 2s infinite linear alternate-reverse; }

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(16px, 9999px, 56px, 0);
    transform: skew(0.67deg); }
  5% {
    clip: rect(55px, 9999px, 97px, 0);
    transform: skew(0.05deg); }
  10% {
    clip: rect(9px, 9999px, 88px, 0);
    transform: skew(0.83deg); }
  15% {
    clip: rect(91px, 9999px, 28px, 0);
    transform: skew(0.96deg); }
  20% {
    clip: rect(33px, 9999px, 15px, 0);
    transform: skew(0.52deg); }
  25% {
    clip: rect(26px, 9999px, 76px, 0);
    transform: skew(0.16deg); }
  30% {
    clip: rect(99px, 9999px, 67px, 0);
    transform: skew(0.93deg); }
  35% {
    clip: rect(3px, 9999px, 54px, 0);
    transform: skew(0.51deg); }
  40% {
    clip: rect(83px, 9999px, 1px, 0);
    transform: skew(0.71deg); }
  45% {
    clip: rect(42px, 9999px, 94px, 0);
    transform: skew(0.4deg); }
  50% {
    clip: rect(75px, 9999px, 76px, 0);
    transform: skew(0.42deg); }
  55% {
    clip: rect(50px, 9999px, 27px, 0);
    transform: skew(0.74deg); }
  60% {
    clip: rect(67px, 9999px, 34px, 0);
    transform: skew(0.33deg); }
  65% {
    clip: rect(23px, 9999px, 1px, 0);
    transform: skew(0.03deg); }
  70% {
    clip: rect(26px, 9999px, 9px, 0);
    transform: skew(0.76deg); }
  75% {
    clip: rect(6px, 9999px, 45px, 0);
    transform: skew(0.08deg); }
  80% {
    clip: rect(27px, 9999px, 46px, 0);
    transform: skew(0.34deg); }
  85% {
    clip: rect(44px, 9999px, 9px, 0);
    transform: skew(0.9deg); }
  90% {
    clip: rect(55px, 9999px, 34px, 0);
    transform: skew(0.87deg); }
  95% {
    clip: rect(7px, 9999px, 100px, 0);
    transform: skew(0.65deg); }
  100% {
    clip: rect(10px, 9999px, 34px, 0);
    transform: skew(0.95deg); } }
@keyframes glitch-anim2 {
  0% {
    clip: rect(77px, 9999px, 11px, 0);
    transform: skew(0.23deg); }
  5% {
    clip: rect(5px, 9999px, 28px, 0);
    transform: skew(0.3deg); }
  10% {
    clip: rect(22px, 9999px, 29px, 0);
    transform: skew(0.25deg); }
  15% {
    clip: rect(34px, 9999px, 25px, 0);
    transform: skew(0.11deg); }
  20% {
    clip: rect(46px, 9999px, 14px, 0);
    transform: skew(0.74deg); }
  25% {
    clip: rect(62px, 9999px, 80px, 0);
    transform: skew(0.26deg); }
  30% {
    clip: rect(7px, 9999px, 90px, 0);
    transform: skew(0.97deg); }
  35% {
    clip: rect(75px, 9999px, 32px, 0);
    transform: skew(0.91deg); }
  40% {
    clip: rect(51px, 9999px, 31px, 0);
    transform: skew(0.43deg); }
  45% {
    clip: rect(94px, 9999px, 98px, 0);
    transform: skew(0.16deg); }
  50% {
    clip: rect(24px, 9999px, 98px, 0);
    transform: skew(0.74deg); }
  55% {
    clip: rect(45px, 9999px, 32px, 0);
    transform: skew(0.28deg); }
  60% {
    clip: rect(53px, 9999px, 77px, 0);
    transform: skew(0.67deg); }
  65% {
    clip: rect(83px, 9999px, 3px, 0);
    transform: skew(0.26deg); }
  70% {
    clip: rect(42px, 9999px, 93px, 0);
    transform: skew(0.08deg); }
  75% {
    clip: rect(66px, 9999px, 79px, 0);
    transform: skew(0.15deg); }
  80% {
    clip: rect(44px, 9999px, 60px, 0);
    transform: skew(0.78deg); }
  85% {
    clip: rect(13px, 9999px, 84px, 0);
    transform: skew(0.72deg); }
  90% {
    clip: rect(59px, 9999px, 4px, 0);
    transform: skew(0.81deg); }
  95% {
    clip: rect(54px, 9999px, 73px, 0);
    transform: skew(0.57deg); }
  100% {
    clip: rect(31px, 9999px, 83px, 0);
    transform: skew(0.91deg); } }
@keyframes glitch-skew {
  0% {
    transform: skew(-3deg); }
  10% {
    transform: skew(-3deg); }
  20% {
    transform: skew(-3deg); }
  30% {
    transform: skew(2deg); }
  40% {
    transform: skew(-3deg); }
  50% {
    transform: skew(5deg); }
  60% {
    transform: skew(-1deg); }
  70% {
    transform: skew(5deg); }
  80% {
    transform: skew(-4deg); }
  90% {
    transform: skew(-2deg); }
  100% {
    transform: skew(0deg); } }
/* button design*/
#footer {
  background: none;
  text-align: center;
  position: fixed;
  bottom: 2rem;
  width: 100%; }

.draw-border {
  box-shadow: inset 0 0 0 2px #01c5c4;
  color: white;
  -webkit-transition: color 0.25s 0.0833333333s;
  transition: color 0.25s 0.0833333333s;
  position: relative; }

.draw-border::before, .draw-border::after {
  border: 0 solid transparent;
  box-sizing: border-box;
  content: '';
  pointer-events: none;
  position: absolute;
  width: 0;
  height: 0;
  bottom: 0;
  right: 0; }

.draw-border::before {
  border-bottom-width: 2px;
  border-left-width: 2px; }

.draw-border::after {
  border-top-width: 2px;
  border-right-width: 2px; }

.draw-border:hover {
  color: #ff00c1; }

.draw-border:hover::before, .draw-border:hover::after {
  border-color: white;
  -webkit-transition: border-color 0s, width 0.25s, height 0.25s;
  transition: border-color 0s, width 0.25s, height 0.25s;
  width: 100%;
  height: 100%; }

.draw-border:hover::before {
  -webkit-transition-delay: 0s, 0s, 0.25s;
  transition-delay: 0s, 0s, 0.25s; }

.draw-border:hover::after {
  -webkit-transition-delay: 0s, 0.25s, 0s;
  transition-delay: 0s, 0.25s, 0s; }

.btn {
  background: none;
  border: none;
  cursor: pointer;
  line-height: 1.5;
  padding: 1em 1em 1em 2em;
  letter-spacing: 0.7rem;
  font-weight: bold; }

button:focus {
  outline: none; }

/*button entrance animation*/
@keyframes slideUp {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }
.btn-slideup {
  animation-duration: 1s;
  transition-timing-function: ease-in;
  animation-fill-mode: both;
  animation-name: slideUp; }

/*about page*/
@keyframes slide-diagonal {
  0% {
    opacity: 0;
    transform: translate3d(100%, 100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }
#about-wrapper-main {
  display: flex;
  flex-direction: column;
  align-items: center; }

.wrapper-slideup-1 {
  animation-duration: 200ms;
  transition-timing-function: ease-in;
  animation-fill-mode: none;
  animation-name: slide-diagonal; }

.wrapper-slideup-2 {
  animation-duration: 400ms;
  transition-timing-function: ease-in;
  animation-fill-mode: none;
  animation-name: slide-diagonal; }

.wrapper-slideup-3 {
  animation-duration: 800ms;
  transition-timing-function: ease-in;
  animation-fill-mode: none;
  animation-name: slide-diagonal; }

#about-wrapper-pink {
  width: 100vw;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;
  background-color: #ff00c1; }

#about-wrapper-white {
  width: 100vw;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;
  background-color: #00fff9; }

#about-wrapper-main {
  width: 100vw;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;
  background: #000000;
  /* fallback for old browsers */
  background: -webkit-linear-gradient(to right, #434343, #000000);
  /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #434343, #000000);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */ }

.about-btn-slideup {
  animation-delay: 600ms;
  animation-duration: 1s;
  transition-timing-function: ease-in;
  animation-fill-mode: both;
  animation-name: slideUp; }

.glitch-about {
  padding: 1em;
  position: relative;
  color: white;
  font-size: 2rem;
  letter-spacing: .5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 2s infinite linear alternate-reverse; }
  .glitch-about::before {
    padding: 1em;
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
    a typical top,right,bottom,left fashion and creates a mask
    to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
    with an alternating animation to keep things fresh. */
    animation: glitch-anim 3s infinite linear alternate-reverse; }
  .glitch-about::after {
    padding: 1em;
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 2s infinite linear alternate-reverse; }

.typewriter {
  color: #64dcdc;
  letter-spacing: 1em;
  overflow: hidden;
  /* Ensures the content is not revealed until the animation */
  border-right: .15em solid #ff00c1;
  /* The typwriter cursor */
  white-space: nowrap;
  /* Keeps the content on a single line */
  margin: 0.5em auto;
  /* Gives that scrolling effect as the typing happens */
  animation: typing 2s steps(25), blink-caret 0.75s step-end infinite;
  animation-delay: 600ms; }

/* The typing effect */
@keyframes typing {
  from {
    width: 0; }
  to {
    width: 25em; } }
/* The typewriter cursor effect */
@keyframes blink-caret {
  from, to {
    border-color: transparent; }
  50% {
    border-color: #ff00c1; } }
.about-body p {
  color: white; }

#about-me-panel {
  display: flex;
  flex-flow: row;
  background: rgba(0, 0, 0, 0.3);
  padding: 1em;
  border-left: #00fff9 1px solid; }

#about-me-content {
  flex-flow: column; }

#mypicture {
  width: 20%;
  max-width: 10em;
  height: auto;
  border-radius: 50%;
  margin: 0 2em 2em 0; }

/*# sourceMappingURL=style.css.map */
